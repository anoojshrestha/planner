{"version":3,"sources":["component/weekdays.component.jsx","component/workinghouroption.component.jsx","component/plannedhour.component.jsx","component/planner.component.jsx","App.js","serviceWorker.js","index.js"],"names":["WeekDays","state","Fragment","Component","WorkingHourOption","this","props","days","map","day","key","empid","id","onChange","handleChangeDay","value","PlannedHour","vals","val","index","arrid","undefined","className","employees","Newemp","type","handleChangeName","Planner","bind","mon","tue","wed","thu","fri","sat","sun","m1","m2","d1","n","all","calculated","d","setState","newid","empidn","daa","e","document","getElementById","options","selectedIndex","j","length","console","log","id_all","rand_id","rand_id_all","count","Math","floor","random","new_all","splice","new_m1","new_n","new_m2","new_d1","target","replace","emp","href","onClick","addId","calculatePlan","Date","getFullYear","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gPAmBeA,E,2MAhBbC,MAAQ,G,wEAEN,OACE,kBAAC,IAAMC,SAAP,KACE,sCACA,wCACA,wCACA,0CACA,uCACA,uCACA,4C,GAXeC,aCwBRC,E,iLAvBH,IAAD,OACP,OAAOC,KAAKC,MAAMC,KAAKC,KAAI,SAAAC,GACzB,OACE,kBAAC,IAAMP,SAAP,CAAgBQ,IAAK,UAAYD,EAAM,IAAM,EAAKH,MAAMK,OACtD,4BACE,4BACEC,GAAI,UAAYH,EAAM,IAAM,EAAKH,MAAMK,MACvCE,SAAU,EAAKP,MAAMQ,iBAErB,4BAAQC,MAAM,OAAd,YACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,MAAd,aACA,4BAAQA,MAAM,KAAd,OACA,4BAAQA,MAAM,KAAd,SACA,4BAAQA,MAAM,OAAd,qB,GAfkBZ,aCqBjBa,E,iLApBH,IAAD,OACP,OAAOX,KAAKC,MAAMW,KAAKT,KAAI,SAACU,EAAKC,GAC/B,OAAIA,GAAS,EAAKb,MAAMc,YAAgBC,GAAPH,GAA2B,IAAPA,EAEjD,kBAAC,IAAMhB,SAAP,CAAgBQ,IAAKS,GACnB,wBACEG,UAAU,cACVV,GAAIM,EAAIN,GAAK,IAAMM,EAAIT,IAAM,IAAMS,EAAIH,OAEtC,EAAKT,MAAMiB,UAAUL,EAAIN,MAIvBO,GAAS,EAAKb,MAAMc,YAAiBC,GAAPH,GAA2B,IAAPA,OAAtD,EACE,6C,GAfWf,aCIpBqB,EAAS,SAAAlB,GAAK,OAClB,kBAAC,IAAMJ,SAAP,KACE,wBAAIoB,UAAU,QACZ,8BAAOhB,EAAMM,GAAK,IAEpB,wBAAIU,UAAU,YACZ,2BACEG,KAAK,OACLb,GAAI,QAAUN,EAAMM,GACpBC,SAAUP,EAAMoB,sBA+YTC,E,YAxYb,WAAYrB,GAAQ,IAAD,8BACjB,4CAAMA,KAEDoB,iBAAmB,EAAKA,iBAAiBE,KAAtB,gBACxB,EAAKd,gBAAkB,EAAKA,gBAAgBc,KAArB,gBAEvB,EAAK3B,MAAQ,CACXW,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GACjBL,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACjDgB,UAAW,GACXM,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,EAAG,GACHC,IAAK,GACLC,WAAY,GAtBG,E,iFA0BE,IAAD,OAClBpC,KAAKJ,MAAMM,KAAKC,KAAI,SAAAkC,GAClB,OAAO,EAAKzC,MAAMW,GAAGJ,KAAI,SAAAG,GAEvB,OADA,EAAKV,MAAMyC,GAAG/B,GAAS,CAAEC,GAAID,EAAOF,IAAKiC,EAAG3B,MAAO,OAC5C,EAAK4B,SAAS,CAAED,EAAG,EAAKzC,MAAMyC,a,4BAKrCE,GAAQ,IAAD,OACXvC,KAAKJ,MAAMW,GAAGgC,GAASA,EAGvBvC,KAAKJ,MAAMmC,GAAK,GAChB/B,KAAKJ,MAAMoC,GAAK,GAChBhC,KAAKJ,MAAMqC,GAAK,GAChBjC,KAAKJ,MAAMsC,EAAI,GACflC,KAAKJ,MAAMuC,IAAM,GAGjBnC,KAAKsC,SAAS,CACZP,GAAI/B,KAAKJ,MAAMmC,GACfC,GAAIhC,KAAKJ,MAAMoC,GACfC,GAAIjC,KAAKJ,MAAMqC,GACfC,EAAGlC,KAAKJ,MAAMsC,EACdC,IAAKnC,KAAKJ,MAAMuC,IAChBC,WAAY,EACZ7B,GAAIP,KAAKJ,MAAMW,KAGjBP,KAAKJ,MAAMM,KAAKC,KAAI,SAAAkC,GAClB,EAAKzC,MAAMyC,GAAGE,GAAS,CAAEhC,GAAIgC,EAAOnC,IAAKiC,EAAG3B,MAAO,OACnD,EAAK4B,SAAS,CAAED,EAAG,EAAKzC,MAAMyC,U,sCAIjB,IAAD,OACdrC,KAAKsC,SAAS,CAAEF,WAAY,IAE5BpC,KAAKJ,MAAMW,GAAGJ,KAAI,SAAAqC,GAChB,EAAK5C,MAAMM,KAAKC,KAAI,SAAAsC,GAClB,IAAIC,EAAIC,SAASC,eAAe,UAAYH,EAAM,IAAMD,GACxD,EAAK5C,MAAM6C,GAAKD,GAAU,CACxBjC,GAAIiC,EACJpC,IAAKqC,EACL/B,MAAOgC,EAAEG,QAAQH,EAAEI,eAAepC,OAEpC,EAAK4B,SAAS,CAAEG,IAAK,EAAK7C,MAAM6C,WAIpCzC,KAAKJ,MAAMM,KAAKC,KAAI,SAACU,EAAKC,GACxB,IAAIT,EAAM,EAEV,EAAKT,MAAMiB,GAAKV,KAAI,SAACC,EAAK2C,QACb/B,GAAPZ,GAAoBA,EAAIA,MAAQS,IAChB,OAAdT,EAAIM,OACNL,EAAM,EAAKT,MAAMmC,GAAGiB,OACpB,EAAKpD,MAAMmC,GAAG1B,GAAO,CACnBE,GAAIH,EAAIG,GACRH,IAAKS,EACLH,MAAON,EAAIM,OAEb,EAAK4B,SAAS,CAAEP,GAAI,EAAKnC,MAAMmC,MACR,OAAd3B,EAAIM,OACbL,EAAM,EAAKT,MAAMoC,GAAGgB,OACpB,EAAKpD,MAAMoC,GAAG3B,GAAO,CACnBE,GAAIH,EAAIG,GACRH,IAAKS,EACLH,MAAON,EAAIM,OAGb,EAAK4B,SAAS,CAAEN,GAAI,EAAKpC,MAAMoC,MACR,MAAd5B,EAAIM,OACbL,EAAM,EAAKT,MAAMqC,GAAGe,OACpB,EAAKpD,MAAMqC,GAAG5B,GAAO,CACnBE,GAAIH,EAAIG,GACRH,IAAKS,EACLH,MAAON,EAAIM,OAGb,EAAK4B,SAAS,CAAEL,GAAI,EAAKrC,MAAMqC,MACR,MAAd7B,EAAIM,OACbL,EAAM,EAAKT,MAAMsC,EAAEc,OACnB,EAAKpD,MAAMsC,EAAE7B,GAAO,CAClBE,GAAIH,EAAIG,GACRH,IAAKS,EACLH,MAAON,EAAIM,OAGb,EAAK4B,SAAS,CAAEJ,EAAG,EAAKtC,MAAMsC,KACP,QAAd9B,EAAIM,QACbL,EAAM,EAAKT,MAAMuC,IAAIa,OACrB,EAAKpD,MAAMuC,IAAI9B,GAAO,CACpBE,GAAIH,EAAIG,GACRH,IAAKS,EACLH,MAAON,EAAIM,OAGb,EAAK4B,SAAS,CAAEH,IAAK,EAAKvC,MAAMuC,WAKtC,EAAKvC,MAAMiB,GAAO,GAClB,EAAKyB,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChCoC,QAAQC,IAAI,EAAKtD,MAAMiB,IAGvB,IAAIN,EAAK,EACL4C,EAAS,EACTC,EAAU,EACVC,EAAc,EACdC,EAAQ,EAOZ,GALA/C,EAAK,EAAKX,MAAMmC,GAAGiB,OACnBG,EAAS,EAAKvD,MAAMuC,IAAIa,OACxBI,EAAUG,KAAKC,MAAMD,KAAKE,SAAWlD,GACrC8C,EAAcE,KAAKC,MAAMD,KAAKE,SAAWN,GAE9B,IAAP5C,EAAU,CACZ,KACEO,EAAQ,GACR,EAAKlB,MAAM,EAAKA,MAAMM,KAAKY,EAAQ,IAAI,GAAGP,IACxC,EAAKX,MAAMuC,IAAIkB,GAAa9C,KAE9B8C,EAAcE,KAAKC,MAAMD,KAAKE,SAAWN,OACzCG,EACY,MAId,EAAK1D,MAAMiB,GAAK,GAAK,EAAKjB,MAAMuC,IAAIkB,GACpC,EAAKf,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChC,IAAM6C,EAAU,EAAK9D,MAAMuC,IAAIwB,OAAON,EAAa,GACnD,EAAKf,SAAS,CAAEH,IAAKuB,QAChB,CACL,KACE5C,EAAQ,GACRP,EAAK,GACL,EAAKX,MAAM,EAAKA,MAAMM,KAAKY,EAAQ,IAAI,GAAGP,IACxC,EAAKX,MAAMmC,GAAGqB,GAAS7C,KAEzB6C,EAAUG,KAAKC,MAAMD,KAAKE,SAAWlD,OACrC+C,EACY,MAKd,EAAK1D,MAAMiB,GAAK,GAAK,EAAKjB,MAAMmC,GAAGqB,GACnC,EAAKd,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChC,IAAM+C,EAAS,EAAKhE,MAAMmC,GAAG4B,OAAOP,EAAS,GAC7C,EAAKd,SAAS,CAAEP,GAAI6B,IAQtB,GALArD,EAAK,EAAKX,MAAMsC,EAAEc,OAClBG,EAAS,EAAKvD,MAAMuC,IAAIa,OACxBI,EAAUG,KAAKC,MAAMD,KAAKE,SAAWlD,GACrC8C,EAAcE,KAAKC,MAAMD,KAAKE,SAAWN,GAE9B,IAAP5C,EAAU,CACZ,EAAKX,MAAMiB,GAAK,GAAK,EAAKjB,MAAMuC,IAAIkB,GACpC,EAAKf,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChC,IAAM6C,EAAU,EAAK9D,MAAMuC,IAAIwB,OAAON,EAAa,GACnD,EAAKf,SAAS,CAAEH,IAAKuB,QAChB,CACL,EAAK9D,MAAMiB,GAAK,GAAK,EAAKjB,MAAMsC,EAAEkB,GAClC,EAAKd,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChC,IAAMgD,EAAQ,EAAKjE,MAAMsC,EAAEyB,OAAOP,EAAS,GAC3C,EAAKd,SAAS,CAAEJ,EAAG2B,IAQrB,GALAtD,EAAK,EAAKX,MAAMoC,GAAGgB,OACnBG,EAAS,EAAKvD,MAAMuC,IAAIa,OACxBI,EAAUG,KAAKC,MAAMD,KAAKE,SAAWlD,GACrC8C,EAAcE,KAAKC,MAAMD,KAAKE,SAAWN,GAE9B,IAAP5C,EAAU,CACZ,EAAKX,MAAMiB,GAAK,GAAK,EAAKjB,MAAMuC,IAAIkB,GACpC,EAAKf,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChC,IAAM6C,EAAU,EAAK9D,MAAMuC,IAAIwB,OAAON,EAAa,GACnD,EAAKf,SAAS,CAAEH,IAAKuB,QAChB,CACL,EAAK9D,MAAMiB,GAAK,GAAK,EAAKjB,MAAMoC,GAAGoB,GACnC,EAAKd,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChC,IAAMiD,EAAS,EAAKlE,MAAMoC,GAAG2B,OAAOP,EAAS,GAC7C,EAAKd,SAAS,CAAEN,GAAI8B,IAQtB,GALAvD,EAAK,EAAKX,MAAMqC,GAAGe,OACnBG,EAAS,EAAKvD,MAAMuC,IAAIa,OACxBI,EAAUG,KAAKC,MAAMD,KAAKE,SAAWlD,GACrC8C,EAAcE,KAAKC,MAAMD,KAAKE,SAAWN,GAE9B,IAAP5C,EAAU,CACZ,EAAKX,MAAMiB,GAAK,GAAK,EAAKjB,MAAMuC,IAAIkB,GACpC,EAAKf,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChC,IAAM6C,EAAU,EAAK9D,MAAMuC,IAAIwB,OAAON,EAAa,GACnD,EAAKf,SAAS,CAAEH,IAAKuB,QAChB,CACL,EAAK9D,MAAMiB,GAAK,GAAK,EAAKjB,MAAMqC,GAAGmB,GACnC,EAAKd,SAAS,CAAEzB,IAAK,EAAKjB,MAAMiB,KAChC,IAAMkD,EAAS,EAAKnE,MAAMqC,GAAG0B,OAAOP,EAAS,GAC7C,EAAKd,SAAS,CAAEL,GAAI8B,IAGtB,EAAKnE,MAAMmC,GAAK,GAChB,EAAKnC,MAAMoC,GAAK,GAChB,EAAKpC,MAAMqC,GAAK,GAChB,EAAKrC,MAAMsC,EAAI,GACf,EAAKtC,MAAMuC,IAAM,GAEjB,EAAKG,SAAS,CACZP,GAAI,EAAKnC,MAAMmC,GACfC,GAAI,EAAKpC,MAAMoC,GACfC,GAAI,EAAKrC,MAAMqC,GACfC,EAAG,EAAKtC,MAAMsC,EACdC,IAAK,EAAKvC,MAAMuC,W,uCAKLO,GACf,IAAIrC,EAAMqC,EAAEsB,OAAOzD,GAAG0D,QAAQ,QAAS,IACvCjE,KAAKJ,MAAMsB,UAAUb,GAAOqC,EAAEsB,OAAOtD,MACrCV,KAAKsC,SAAS,CAAEpB,UAAWlB,KAAKJ,MAAMsB,c,sCAGxBwB,GACd1C,KAAKsC,SAAS,CAAEF,WAAY,M,+BAGpB,IAAD,OACP,OACE,kBAAC,IAAMvC,SAAP,KACE,yBAAKoB,UAAU,UAAf,kBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,SACb,+BACE,+BACE,4BACE,wBAAIA,UAAU,QAAd,SACA,wBAAIA,UAAU,YAAd,gBACA,kBAAC,EAAD,OAEDjB,KAAKJ,MAAMW,GAAGJ,KAAI,SAAA+D,GACjB,OACE,kBAAC,IAAMrE,SAAP,CAAgBQ,IAAK,EAAKT,MAAMW,GAAG2D,IACjC,4BACE,kBAAC,EAAD,CACE3D,GAAI,EAAKX,MAAMW,GAAG2D,GAClB7C,iBAAkB,EAAKA,mBAEzB,kBAAC,EAAD,CACEf,MAAO,EAAKV,MAAMW,GAAG2D,GACrBhE,KAAM,EAAKN,MAAMM,KACjBO,gBAAiB,EAAKA,2BAUxC,6BACA,uBACEQ,UAAU,cACVkD,KAAK,IACLC,QAAS,WACP,EAAKC,MAAM,EAAKzE,MAAMW,GAAGyC,UAJ7B,oBASA,uBACE/B,UAAU,qBACVkD,KAAK,IACLC,QAAS,WACP,EAAKE,kBAJT,kBASA,6BACA,6BAEA,yBAAKrD,UAAU,SACb,yBAAKA,UAAU,gBACb,2BAAOA,UAAWjB,KAAKJ,MAAMwC,WAAa,OAAS,QACjD,+BACE,4BACE,wBAAInB,UAAU,SAAd,SACA,kBAAC,EAAD,OAEF,4BACE,wBAAIA,UAAU,SAAd,aACCjB,KAAKJ,MAAMM,KAAKC,KAAI,SAAAC,GACnB,OACE,kBAAC,EAAD,CACEQ,KAAM,EAAKhB,MAAMQ,GACjBc,UAAW,EAAKtB,MAAMsB,UACtBH,MAAM,IACNV,IAAK,KAAOD,QAKpB,4BACE,wBAAIa,UAAU,SAAd,aACCjB,KAAKJ,MAAMM,KAAKC,KAAI,SAAAC,GACnB,OACE,kBAAC,EAAD,CACEQ,KAAM,EAAKhB,MAAMQ,GACjBc,UAAW,EAAKtB,MAAMsB,UACtBH,MAAM,IACNV,IAAK,KAAOD,QAKpB,4BACE,wBAAIa,UAAU,SAAd,OACCjB,KAAKJ,MAAMM,KAAKC,KAAI,SAAAC,GACnB,OACE,kBAAC,EAAD,CACEQ,KAAM,EAAKhB,MAAMQ,GACjBc,UAAW,EAAKtB,MAAMsB,UACtBH,MAAM,IACNV,IAAK,KAAOD,QAKpB,4BACE,wBAAIa,UAAU,SAAd,UACCjB,KAAKJ,MAAMM,KAAKC,KAAI,SAAAC,GACnB,OACE,kBAAC,EAAD,CACEQ,KAAM,EAAKhB,MAAMQ,GACjBc,UAAW,EAAKtB,MAAMsB,UACtBH,MAAM,IACNV,IAAK,KAAOD,YAS5B,6BACA,6BACA,6BACA,6BACA,yBAAKa,UAAU,UAAf,mBACe,IAAIsD,MAAOC,cAAe,IACvC,uBAAGL,KAAK,wCAAR,wB,GAlYYrE,aCTP2E,MARf,WACE,OACE,kBAAC,IAAM5E,SAAP,KACE,kBAAC,EAAD,QCKc6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASrC,SAASC,eAAe,SD2H3C,kBAAmBqC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.1d3560aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass WeekDays extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <th>Montag</th>\r\n        <th>Dienstag</th>\r\n        <th>Mittwoch</th>\r\n        <th>Donnerstag</th>\r\n        <th>Freitag</th>\r\n        <th>Samstag</th>\r\n        <th>Sonntag</th>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeekDays;\r\n","import React, { Component } from \"react\";\r\n\r\nclass WorkingHourOption extends Component {\r\n  render() {\r\n    return this.props.days.map(day => {\r\n      return (\r\n        <React.Fragment key={\"select_\" + day + \"_\" + this.props.empid}>\r\n          <td>\r\n            <select\r\n              id={\"select_\" + day + \"_\" + this.props.empid}\r\n              onChange={this.props.handleChangeDay}\r\n            >\r\n              <option value=\"all\">Any time</option>\r\n              <option value=\"m1\">Morning 1</option>\r\n              <option value=\"m2\">Morning 2</option>\r\n              <option value=\"d\">Day</option>\r\n              <option value=\"n\">Night</option>\r\n              <option value=\"off\">Day off</option>\r\n            </select>\r\n          </td>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default WorkingHourOption;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PlannedHour extends Component {\r\n  render() {\r\n    return this.props.vals.map((val, index) => {\r\n      if (index == this.props.arrid && val != undefined && val != \"\") {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <td\r\n              className=\"name-result\"\r\n              id={val.id + \"_\" + val.day + \"_\" + val.value}\r\n            >\r\n              {this.props.employees[val.id]}\r\n            </td>\r\n          </React.Fragment>\r\n        );\r\n      } else if (index == this.props.arrid && (val == undefined || val == \"\")) {\r\n        return <td>Nobody</td>;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default PlannedHour;\r\n","import React, { Component } from \"react\";\r\n\r\nimport WeekDays from \"./weekdays.component\";\r\nimport WorkingHourOption from \"./workinghouroption.component\";\r\nimport PlannedHour from \"./plannedhour.component\";\r\n\r\nconst Newemp = props => (\r\n  <React.Fragment>\r\n    <td className=\"s-no\">\r\n      <span>{props.id + 1}</span>\r\n    </td>\r\n    <td className=\"emp-name\">\r\n      <input\r\n        type=\"text\"\r\n        id={\"name_\" + props.id}\r\n        onChange={props.handleChangeName}\r\n      ></input>\r\n    </td>\r\n  </React.Fragment>\r\n);\r\n\r\nclass Planner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeDay = this.handleChangeDay.bind(this);\r\n\r\n    this.state = {\r\n      id: [0, 1, 2, 3, 4],\r\n      days: [\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\"],\r\n      employees: [],\r\n      mon: [],\r\n      tue: [],\r\n      wed: [],\r\n      thu: [],\r\n      fri: [],\r\n      sat: [],\r\n      sun: [],\r\n      m1: [],\r\n      m2: [],\r\n      d1: [],\r\n      n: [],\r\n      all: [],\r\n      calculated: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.state.days.map(d => {\r\n      return this.state.id.map(empid => {\r\n        this.state[d][empid] = { id: empid, day: d, value: \"all\" };\r\n        return this.setState({ d: this.state[d] });\r\n      });\r\n    });\r\n  }\r\n\r\n  addId(newid) {\r\n    this.state.id[newid] = newid;\r\n\r\n    //Clear state\r\n    this.state.m1 = [];\r\n    this.state.m2 = [];\r\n    this.state.d1 = [];\r\n    this.state.n = [];\r\n    this.state.all = [];\r\n    // set the state\r\n\r\n    this.setState({\r\n      m1: this.state.m1,\r\n      m2: this.state.m2,\r\n      d1: this.state.d1,\r\n      n: this.state.n,\r\n      all: this.state.all,\r\n      calculated: 0,\r\n      id: this.state.id\r\n    });\r\n\r\n    this.state.days.map(d => {\r\n      this.state[d][newid] = { id: newid, day: d, value: \"all\" };\r\n      this.setState({ d: this.state[d] });\r\n    });\r\n  }\r\n\r\n  calculatePlan() {\r\n    this.setState({ calculated: 1 });\r\n\r\n    this.state.id.map(empidn => {\r\n      this.state.days.map(daa => {\r\n        let e = document.getElementById(\"select_\" + daa + \"_\" + empidn);\r\n        this.state[daa][empidn] = {\r\n          id: empidn,\r\n          day: daa,\r\n          value: e.options[e.selectedIndex].value\r\n        };\r\n        this.setState({ daa: this.state[daa] });\r\n      });\r\n    });\r\n\r\n    this.state.days.map((val, index) => {\r\n      let key = 0;\r\n      let to_delete = [];\r\n      this.state[val].map((day, j) => {\r\n        if (day != undefined && day.day === val) {\r\n          if (day.value === \"m1\") {\r\n            key = this.state.m1.length;\r\n            this.state.m1[key] = {\r\n              id: day.id,\r\n              day: val,\r\n              value: day.value\r\n            };\r\n            this.setState({ m1: this.state.m1 });\r\n          } else if (day.value === \"m2\") {\r\n            key = this.state.m2.length;\r\n            this.state.m2[key] = {\r\n              id: day.id,\r\n              day: val,\r\n              value: day.value\r\n            };\r\n\r\n            this.setState({ m2: this.state.m2 });\r\n          } else if (day.value === \"d\") {\r\n            key = this.state.d1.length;\r\n            this.state.d1[key] = {\r\n              id: day.id,\r\n              day: val,\r\n              value: day.value\r\n            };\r\n\r\n            this.setState({ d1: this.state.d1 });\r\n          } else if (day.value === \"n\") {\r\n            key = this.state.n.length;\r\n            this.state.n[key] = {\r\n              id: day.id,\r\n              day: val,\r\n              value: day.value\r\n            };\r\n\r\n            this.setState({ n: this.state.n });\r\n          } else if (day.value === \"all\") {\r\n            key = this.state.all.length;\r\n            this.state.all[key] = {\r\n              id: day.id,\r\n              day: val,\r\n              value: day.value\r\n            };\r\n\r\n            this.setState({ all: this.state.all });\r\n          }\r\n        }\r\n      });\r\n\r\n      this.state[val] = [];\r\n      this.setState({ val: this.state[val] });\r\n      console.log(this.state[val]);\r\n\r\n      //randomly get one value in 4 different array and set it for monday.\r\n      let id = 0;\r\n      let id_all = 0;\r\n      let rand_id = 0;\r\n      let rand_id_all = 0;\r\n      let count = 0;\r\n\r\n      id = this.state.m1.length;\r\n      id_all = this.state.all.length;\r\n      rand_id = Math.floor(Math.random() * id);\r\n      rand_id_all = Math.floor(Math.random() * id_all);\r\n\r\n      if (id === 0) {\r\n        while (\r\n          index > 0 &&\r\n          this.state[this.state.days[index - 1]][3].id ==\r\n            this.state.all[rand_id_all].id\r\n        ) {\r\n          rand_id_all = Math.floor(Math.random() * id_all);\r\n          count++;\r\n          if (count > 5) {\r\n            break;\r\n          }\r\n        }\r\n        this.state[val][0] = this.state.all[rand_id_all];\r\n        this.setState({ val: this.state[val] });\r\n        const new_all = this.state.all.splice(rand_id_all, 1);\r\n        this.setState({ all: new_all });\r\n      } else {\r\n        while (\r\n          index > 0 &&\r\n          id > 0 &&\r\n          this.state[this.state.days[index - 1]][3].id ==\r\n            this.state.m1[rand_id].id\r\n        ) {\r\n          rand_id = Math.floor(Math.random() * id);\r\n          count++;\r\n          if (count > 5) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        this.state[val][0] = this.state.m1[rand_id];\r\n        this.setState({ val: this.state[val] });\r\n        const new_m1 = this.state.m1.splice(rand_id, 1);\r\n        this.setState({ m1: new_m1 });\r\n      }\r\n\r\n      id = this.state.n.length;\r\n      id_all = this.state.all.length;\r\n      rand_id = Math.floor(Math.random() * id);\r\n      rand_id_all = Math.floor(Math.random() * id_all);\r\n\r\n      if (id === 0) {\r\n        this.state[val][3] = this.state.all[rand_id_all];\r\n        this.setState({ val: this.state[val] });\r\n        const new_all = this.state.all.splice(rand_id_all, 1);\r\n        this.setState({ all: new_all });\r\n      } else {\r\n        this.state[val][3] = this.state.n[rand_id];\r\n        this.setState({ val: this.state[val] });\r\n        const new_n = this.state.n.splice(rand_id, 1);\r\n        this.setState({ n: new_n });\r\n      }\r\n\r\n      id = this.state.m2.length;\r\n      id_all = this.state.all.length;\r\n      rand_id = Math.floor(Math.random() * id);\r\n      rand_id_all = Math.floor(Math.random() * id_all);\r\n\r\n      if (id === 0) {\r\n        this.state[val][1] = this.state.all[rand_id_all];\r\n        this.setState({ val: this.state[val] });\r\n        const new_all = this.state.all.splice(rand_id_all, 1);\r\n        this.setState({ all: new_all });\r\n      } else {\r\n        this.state[val][1] = this.state.m2[rand_id];\r\n        this.setState({ val: this.state[val] });\r\n        const new_m2 = this.state.m2.splice(rand_id, 1);\r\n        this.setState({ m2: new_m2 });\r\n      }\r\n\r\n      id = this.state.d1.length;\r\n      id_all = this.state.all.length;\r\n      rand_id = Math.floor(Math.random() * id);\r\n      rand_id_all = Math.floor(Math.random() * id_all);\r\n\r\n      if (id === 0) {\r\n        this.state[val][2] = this.state.all[rand_id_all];\r\n        this.setState({ val: this.state[val] });\r\n        const new_all = this.state.all.splice(rand_id_all, 1);\r\n        this.setState({ all: new_all });\r\n      } else {\r\n        this.state[val][2] = this.state.d1[rand_id];\r\n        this.setState({ val: this.state[val] });\r\n        const new_d1 = this.state.d1.splice(rand_id, 1);\r\n        this.setState({ d1: new_d1 });\r\n      }\r\n\r\n      this.state.m1 = [];\r\n      this.state.m2 = [];\r\n      this.state.d1 = [];\r\n      this.state.n = [];\r\n      this.state.all = [];\r\n\r\n      this.setState({\r\n        m1: this.state.m1,\r\n        m2: this.state.m2,\r\n        d1: this.state.d1,\r\n        n: this.state.n,\r\n        all: this.state.all\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChangeName(e) {\r\n    let key = e.target.id.replace(\"name_\", \"\");\r\n    this.state.employees[key] = e.target.value;\r\n    this.setState({ employees: this.state.employees });\r\n  }\r\n\r\n  handleChangeDay(e) {\r\n    this.setState({ calculated: 0 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"header\">Weekly Planner</div>\r\n        <div className=\"outer\">\r\n          <div className=\"inner\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <th className=\"s-no\">S.No:</th>\r\n                  <th className=\"emp-name\">Emp Name/Day</th>\r\n                  <WeekDays />\r\n                </tr>\r\n                {this.state.id.map(emp => {\r\n                  return (\r\n                    <React.Fragment key={this.state.id[emp]}>\r\n                      <tr>\r\n                        <Newemp\r\n                          id={this.state.id[emp]}\r\n                          handleChangeName={this.handleChangeName}\r\n                        />\r\n                        <WorkingHourOption\r\n                          empid={this.state.id[emp]}\r\n                          days={this.state.days}\r\n                          handleChangeDay={this.handleChangeDay}\r\n                        />\r\n                      </tr>\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <a\r\n          className=\"btn add-emp\"\r\n          href=\"#\"\r\n          onClick={() => {\r\n            this.addId(this.state.id.length);\r\n          }}\r\n        >\r\n          Add New Employee\r\n        </a>\r\n        <a\r\n          className=\"btn calculate-plan\"\r\n          href=\"#\"\r\n          onClick={() => {\r\n            this.calculatePlan();\r\n          }}\r\n        >\r\n          Calculate Plan\r\n        </a>\r\n        <br />\r\n        <br />\r\n\r\n        <div className=\"outer\">\r\n          <div className=\"inner-result\">\r\n            <table className={this.state.calculated ? \"show\" : \"hide\"}>\r\n              <tbody>\r\n                <tr>\r\n                  <th className=\"shift\">Shift</th>\r\n                  <WeekDays />\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"shift\">Morning 1</td>\r\n                  {this.state.days.map(day => {\r\n                    return (\r\n                      <PlannedHour\r\n                        vals={this.state[day]}\r\n                        employees={this.state.employees}\r\n                        arrid=\"0\"\r\n                        key={\"0_\" + day}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"shift\">Morning 2</td>\r\n                  {this.state.days.map(day => {\r\n                    return (\r\n                      <PlannedHour\r\n                        vals={this.state[day]}\r\n                        employees={this.state.employees}\r\n                        arrid=\"1\"\r\n                        key={\"1_\" + day}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"shift\">Day</td>\r\n                  {this.state.days.map(day => {\r\n                    return (\r\n                      <PlannedHour\r\n                        vals={this.state[day]}\r\n                        employees={this.state.employees}\r\n                        arrid=\"2\"\r\n                        key={\"2_\" + day}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"shift\">Night </td>\r\n                  {this.state.days.map(day => {\r\n                    return (\r\n                      <PlannedHour\r\n                        vals={this.state[day]}\r\n                        employees={this.state.employees}\r\n                        arrid=\"3\"\r\n                        key={\"3_\" + day}\r\n                      />\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div className=\"footer\">\r\n          copyright © {new Date().getFullYear()}{\" \"}\r\n          <a href=\"mailto:anoojshrestha.52532@gmail.com\">anooj shrestha</a>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Planner;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Planner from \"./component/planner.component\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Planner></Planner>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}